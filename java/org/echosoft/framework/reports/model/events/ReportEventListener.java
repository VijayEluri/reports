package org.echosoft.framework.reports.model.events;

import java.io.Serializable;
import java.util.EventListener;

import org.echosoft.framework.reports.processor.ExecutionContext;

/**
 * Обработчик события связанный с обработкой отчета в целом.
 *
 * @author Anton Sharapov
 */
public interface ReportEventListener extends EventListener, Serializable {

    /**
     * Данный метод вызывается в начале построения отчета, после создания и инициализации рабочая книги отчета но перед обработкой ее листов. 
     *
     * @param ectx  контекст выполнения с описанием текущего состояния обработки отчета.
     * @throws Exception вызывается в случае каких-либо проблем. Генератором отчетов не предпринимается каких-либо мер по
     *  обработке подобных исключений и поднятие исключения каким-либо обработчиком ведет к прекращению формирования
     *  данного отчета.
     */
    public void beforeReport(ExecutionContext ectx) throws Exception;

    /**
     * Данный метод вызывается перед обработкой очередного листа шаблона отчета. Контекст выполнения уже содержит ссылку на модель листа
     * который должен быть сейчас обработан но в формируемой рабочей книге отчета никаких изменений связанных с этим действием еще не проводилось.
     * 
     * @param ectx  контекст выполнения с описанием текущего состояния обработки отчета.
     * @throws Exception вызывается в случае каких-либо проблем. Генератором отчетов не предпринимается каких-либо мер по
     *  обработке подобных исключений и поднятие исключения каким-либо обработчиком ведет к прекращению формирования
     *  данного отчета.
     */
    public void beforeSheet(ExecutionContext ectx) throws Exception;

    /**
     * Данный метод вызывается по окончании обработки очередного листа шаблона отчета. Информация об обработанном листе отчета все еще находится в контексте.
     *
     * @param ectx  контекст выполнения с описанием текущего состояния обработки отчета.
     * @throws Exception вызывается в случае каких-либо проблем. Генератором отчетов не предпринимается каких-либо мер по
     *  обработке подобных исключений и поднятие исключения каким-либо обработчиком ведет к прекращению формирования
     *  данного отчета.
     */
    public void afterSheet(ExecutionContext ectx) throws Exception;

    /**
     * Данный метод вызывается в самом конце построения отчета после того как был обработан последний лист документа.  
     *
     * @param ectx  контекст выполнения с описанием текущего состояния обработки отчета.
     * @throws Exception вызывается в случае каких-либо проблем. Генератором отчетов не предпринимается каких-либо мер по
     *  обработке подобных исключений и поднятие исключения каким-либо обработчиком ведет к прекращению формирования
     *  данного отчета.
     */
    public void afterReport(ExecutionContext ectx) throws Exception;
}
